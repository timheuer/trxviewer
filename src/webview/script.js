/* Generated by Copilot */
function initializeCollapsible(button) {
    button.addEventListener('click', function (e) {
        e.stopPropagation();
        const content = this.nextElementSibling;
        const icon = this.querySelector('span:last-child');

        if (content.classList.contains('show')) {
            content.classList.remove('show');
            icon.classList.remove('expanded-icon');
            icon.classList.add('collapsed-icon');
        } else {
            content.classList.add('show');
            icon.classList.remove('collapsed-icon');
            icon.classList.add('expanded-icon');
        }
    });
}

// Initialize all collapsibles
document.querySelectorAll('.collapsible').forEach(initializeCollapsible);

// Update expanded/collapsed icons for initial state
document.querySelectorAll('.content.show').forEach(content => {
    const button = content.previousElementSibling;
    if (button && button.classList.contains('collapsible')) {
        const icon = button.querySelector('span:last-child');
        icon.classList.remove('collapsed-icon');
        icon.classList.add('expanded-icon');
    }
});

// Expand all button functionality
const expandAllButton = document.getElementById('expandAllButton');
let allExpanded = false;

expandAllButton.addEventListener('click', function () {
    allExpanded = !allExpanded;
    const allContents = document.querySelectorAll('.content');
    const allButtons = document.querySelectorAll('.collapsible');

    allContents.forEach(content => {
        if (allExpanded) {
            content.classList.add('show');
        } else {
            content.classList.remove('show');
        }
    });

    allButtons.forEach(button => {
        const icon = button.querySelector('span:last-child');
        if (allExpanded) {
            icon.classList.remove('collapsed-icon');
            icon.classList.add('expanded-icon');
        } else {
            icon.classList.remove('expanded-icon');
            icon.classList.add('collapsed-icon');
        }
    });

    this.textContent = allExpanded ? 'Collapse All Sections' : 'Expand All Sections';
});

// Expand failed tests by default
window.addEventListener('DOMContentLoaded', () => {
    const failedTestsSection = document.querySelector('.test-section');
    if (failedTestsSection) {
        const failedCount = parseInt(failedTestsSection.querySelector('.collapsible span').textContent.match(/\d+/)[0]);
        if (failedCount > 0) {
            const sectionButton = failedTestsSection.querySelector('.collapsible');
            const sectionContent = failedTestsSection.querySelector('.content');

            sectionContent.classList.add('show');
            const icon = sectionButton.querySelector('span:last-child');
            icon.classList.remove('collapsed-icon');
            icon.classList.add('expanded-icon');
        }
    }
});
